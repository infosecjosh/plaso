# -*- coding: utf-8 -*-
"""This files contains

"""

from __future__ import unicode_literals

from dfdatetime import time_elements as dfdatetime_time_elements

from plaso.containers import events
from plaso.containers import time_events
from plaso.lib import definitions
from plaso.parsers import sqlite
from plaso.parsers.sqlite_plugins import interface

class MiFitEventData(events.EventData):
  """Mifit  event data.

  Attributes:
    Summary (str): Name with the sender.
    Data (str): content of the SMS text message.
    TimeZone (str): message read status, either Read or Unread.
    DeviceID (str): message type, either Sent or Received.
  """

  DATA_TYPE = 'iot:mifit'

  def __init__(self):
    """Initializes event data."""
    super(MiFitEventData, self).__init__(data_type=self.DATA_TYPE)
    self.summary = None
    self.data = None
    self.timeZone = None
    self.deviceID = None

class MiFitPlugin(interface.SQLitePlugin):
  """Parser for MiFit databases."""

  NAME = 'mifit_events_parser'
  DESCRIPTION = 'Parser for MiFit SQLite database files.'

  # Define the needed queries.
  QUERIES = [
      ('SELECT DATE, DATA, SUMMARY, TIME_ZONE, DEVICE_ID FROM DATE_DATA;'
      ,'ParseEventRow')]

  # The required tables.
  REQUIRED_TABLES = frozenset([ 'DATE_DATA' ])

  SCHEMAS = [{
      'ACTIVETRACK': (
          'CREATE TABLE "ACTIVETRACK" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"LATITUDE" REAL,"LONGITUDE" '
          'REAL,"TIME" INTEGER,"ALTITUDE" REAL,"ACCURACY" INTEGER,"STEPS" '
          'INTEGER,"STEPL" REAL,"PACE" REAL,"STATE" INTEGER,"EXTRA" '
          'TEXT,"SYNCED" INTEGER,"DISTANCE" REAL,"BAROMETER_ALTITUDE" '
          'REAL,"HR" INTEGER,UNIQUE (TRACKID,TIME) ON CONFLICT REPLACE)'),
      'ACTIVETRACKHR': (
          'CREATE TABLE "ACTIVETRACKHR" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"TIME" INTEGER,"HR" '
          'INTEGER,"SYNCED" INTEGER,UNIQUE (TRACKID,TIME) ON CONFLICT '
          'REPLACE)'),
      'ACTIVETRACK_BAR': (
          'CREATE TABLE "ACTIVETRACK_BAR" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"TIME" '
          'INTEGER,"BAROMETER_ALTITUDE" REAL, UNIQUE (TRACKID,TIME) ON '
          'CONFLICT REPLACE)'),
      'ACTIVETRACK_DISTANCE': (
          'CREATE TABLE "ACTIVETRACK_DISTANCE" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"TIME" INTEGER,"DISTANCE" '
          'REAL,UNIQUE (TRACKID,TIME) ON CONFLICT REPLACE)'),
      'ACTIVETRACK_STEP': (
          'CREATE TABLE "ACTIVETRACK_STEP" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"TIME" INTEGER,"STEPS" '
          'INTEGER,"STEPL" REAL,"STEP_FREQ" REAL,UNIQUE (TRACKID,TIME) ON '
          'CONFLICT REPLACE)'),
      'ACTIVE_MI_PLUS_SHOES': (
          'CREATE TABLE "ACTIVE_MI_PLUS_SHOES" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"LANDING_TIME" '
          'INTEGER,"FLIGHT_TIME" INTEGER,"REAL_STEPS" INTEGER)'),
      'ALARM': (
          'CREATE TABLE "ALARM" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"CALENDAR" INTEGER,"ENABLED" INTEGER,"IS_UPDATE" INTEGER,"M_DAYS" '
          'INTEGER,"M_SMART_WAKEUP_DURATION" INTEGER,"VISIBLE" '
          'INTEGER,"IS_SMART_WAKEUP" INTEGER)'),
      'CONFIG': (
          'CREATE TABLE "CONFIG" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"ALARM_NOTIFY_ENABLED" INTEGER,"DAY_REPORT_NOTI" '
          'TEXT,"DISCONNECTED_REMINDER" INTEGER,"ENABLE_CONNECTED_BT_ADV" '
          'INTEGER,"GOAL_STEPS_COUNT" INTEGER,"LIGHT_COLOR" '
          'TEXT,"IN_COMING_CALL_NOTIFY_TIME" INTEGER,"M_OPEN_SLEEP_NOTIFY" '
          'INTEGER,"SMS_NOTIFY_ENABLED" INTEGER,"INCALL_NOTIFY_ENABLED" '
          'INTEGER,"UNIT" INTEGER,"VIBRATE" INTEGER,"WEAR_HAND" '
          'TEXT,"WEIGHT_MERGE_RESULT" INTEGER,"WEIGHT_UNIT" '
          'INTEGER,"SMS_CONTACT_NOTIFY_ENABLED" '
          'INTEGER,"INCALL_CONTACT_NOTIFY_ENABLED" INTEGER,"SLEEP_ASSIST" '
          'INTEGER,"HAS_HEART_RATE" INTEGER,"SCREEN_LOCK" '
          'INTEGER,"PRO_DISPLAY" INTEGER,"SEDENTARY_REMIND" '
          'TEXT,"EMAIL_NOTIFY_ENABLED" INTEGER,"LIFT_WRIST_BRIGHT_VIEW" '
          'INTEGER,"GOAL_REMIND" INTEGER,"AVOID_DISTURD_MODE" '
          'INTEGER,"IOSAPP_NOTIFY_SETTINGS" TEXT,"ANDROIDAPP_NOTIFY_SETTINGS" '
          'TEXT,"QUIET_MODE" TEXT,"UNLOCK_SCREEN_TYPE" '
          'INTEGER,"TIME_PANEL_TYPE" INTEGER,"TIME_PANEL_LANG" '
          'INTEGER,"ANTI_LOST" INTEGER,"IS_NOTIFICATION_ON" '
          'INTEGER,"CHECK_NOTIFICATION" INTEGER,"FLIP_WRIST" '
          'INTEGER,"INCALL_NAME_DISPLAY_ENABLED" '
          'INTEGER,"SMS_NAME_DISPLAY_ENABLED" INTEGER,"SHOE_PLACE_MODE" '
          'TEXT,"WEIGHT_BFS_UNIT" INTEGER,"WHOLE_HEART_RATE" '
          'INTEGER,"DIAL_SETTING" INTEGER,"LONG_PRESS_SETTINGS" '
          'INTEGER,"HR_DETECT_TYPE" INTEGER,"WEATHER_SETTING" '
          'TEXT,"WATCH_APPS" TEXT)'),
      'DATE_DATA': (
          'CREATE TABLE "DATE_DATA" ("TYPE" INTEGER,"SOURCE" INTEGER,"DATE" '
          'TEXT PRIMARY KEY NOT NULL ,"SUMMARY" TEXT,"USER_SUMMARY" '
          'TEXT,"INDEXS" TEXT,"DATA" TEXT,"DATA_HR" BLOB,"SUMMARY_HR" '
          'TEXT,"SYNC" INTEGER,"SYNC_QQHEALTH" INTEGER,"TIME_ZONE" '
          'INTEGER,"DEVICE_ID" TEXT)'),
      'DETAIL': (
          'CREATE TABLE "DETAIL" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"UID" TEXT,"STEP" INTEGER,"DEEP_SLEEP" INTEGER,"SHALLOW_SLEEP" '
          'INTEGER,"CREATE_TIME" INTEGER,"DISTANCE" INTEGER,"CALORIE" '
          'INTEGER,"FALL_SLEEP_TIME" INTEGER,"WAKE_TIME" INTEGER)'),
      'DEVICE': (
          'CREATE TABLE "DEVICE" ("DEVICE_ID" TEXT PRIMARY KEY NOT NULL '
          ',"DEVICE_ADDRESS" TEXT,"DEVICE_TYPE" INTEGER,"DEVICE_SOURCE" '
          'INTEGER,"DEVICE_BIND_STATUS" INTEGER,"DEVICE_BIND_TIME" '
          'INTEGER,"DEVICE_SYNC_DATA_TIME" INTEGER,"DEVICE_SYNC_DATA_TIME_HR" '
          'INTEGER,"AUTHKEY" TEXT,"TIME_ZONE" INTEGER,"TIME_ZONE_SYNC_HR" '
          'INTEGER,"SN" TEXT,"HR_FIRMWARE_VERSION" TEXT,"FIRMWARE_VERSION" '
          'TEXT,"MIGRATE_DEVICE" INTEGER,"USER_ID" TEXT,"STATUS" INTEGER)'),
      'DISMISS_ADV': (
          'CREATE TABLE "DISMISS_ADV" ("CREATE_TIME" INTEGER PRIMARY KEY NOT '
          'NULL ,"TITLE" TEXT)'),
      'FRIEND': (
          'CREATE TABLE "FRIEND" ("UID" TEXT PRIMARY KEY NOT NULL ,"USERNAME" '
          'TEXT,"ICON" TEXT,"WEIGHT" INTEGER,"STEP" INTEGER,"SLEEP_TIME" '
          'INTEGER,"CARE_COUNT_BY_HIM" INTEGER,"CARE_COUNT_BY_ME" '
          'INTEGER,"LAST_UPDATE_TIME" INTEGER,"LAST_DETAIL_UPDATE_TIME" '
          'INTEGER,"REMARK_NAME" TEXT,"CREATE_TIME" INTEGER)'),
      'FRIEND_MESSAGE': (
          'CREATE TABLE "FRIEND_MESSAGE" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"FROM_UID" TEXT,"FROM_USERNAME" TEXT,"UPDATE_TIME" '
          'INTEGER,"TYPE" INTEGER,"COUNT" INTEGER,"STATUS" INTEGER,"ICON" '
          'TEXT)'),
      'FW_DWON_SUCCESS_INFO': (
          'CREATE TABLE "FW_DWON_SUCCESS_INFO" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"SOURCE" INTEGER NOT NULL ,"SERVER_APP_VERSION" '
          'INTEGER NOT NULL ,"LOCAL_FW_VERSION" TEXT,"LOCAL_FW_VERSION_CODE" '
          'INTEGER NOT NULL ,"LOCAL_FW_HR_VERSION" '
          'TEXT,"LOCAL_FW_HR_VERSION_CODE" INTEGER NOT NULL '
          ',"LOCAL_MD5_CONTENT" TEXT,"FW_PATH" TEXT,"FW_NAME" '
          'TEXT,"FW_RELY_VERSION" TEXT,"FW_TYPE" TEXT,UNIQUE '
          '(SOURCE,SERVER_APP_VERSION,LOCAL_MD5_CONTENT) ON CONFLICT IGNORE)'),
      'HEART_RATE': (
          'CREATE TABLE "HEART_RATE" ("TYPE" INTEGER,"DEVICE_TYPE" '
          'INTEGER,"DEVICE_SOURCE" INTEGER,"TIME" INTEGER PRIMARY KEY ,"HR" '
          'INTEGER,"STATE" INTEGER,"TIME_ZONE" INTEGER,"DEVICE_ID" TEXT)'),
      'LAB_ACTION': (
          'CREATE TABLE "LAB_ACTION" ("LAB_ACTION_ID" INTEGER PRIMARY KEY '
          ',"USER_ID" TEXT,"PRODUCT_VERSION" INTEGER,"PROTOCOL_VERSION" '
          'INTEGER,"DEVICE_ID" TEXT,"DEVICE_SOURCE" INTEGER,"BEHAVIOR_NAME" '
          'TEXT,"CUSTOMIZE_BEHAVIOR_NAME" TEXT,"ZIP_FILE_NAME" '
          'TEXT,"UPLOAD_STATUS" INTEGER,"TIME_ZONE" '
          'INTEGER,"START_BEHAVIOR_TIME" INTEGER,"END_BEHAVIOR_TIME" INTEGER)'),
      'MANUAL_DATA': (
          'CREATE TABLE "MANUAL_DATA" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TYPE" TEXT,"DATE" TEXT,"SUMMARY" TEXT,"SYNCED" '
          'INTEGER,UNIQUE (TYPE,DATE) ON CONFLICT REPLACE)'),
      'MY_SHOES': (
          'CREATE TABLE "MY_SHOES" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"DATE" TEXT,"MAC" TEXT,"DEVICEID" TEXT,"SN" TEXT,"SHOESID" '
          'TEXT,"BRAND" TEXT,"TYPE" TEXT,"SYNCED" TEXT,"STATE" TEXT,"SUMMARY" '
          'TEXT,"CACHED" TEXT)'),
      'NORMANDY_DATA': (
          'CREATE TABLE "NORMANDY_DATA" ("TYPE" INTEGER,"SOURCE" '
          'INTEGER,"DATE" TEXT PRIMARY KEY NOT NULL ,"SUMMARY" TEXT,"DATA" '
          'BLOB,"SYNC" INTEGER,"TIME_ZONE" INTEGER,"DEVICE_ID" TEXT)'),
      'PUSH': (
          'CREATE TABLE "PUSH" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"MESSAGE_ID" INTEGER)'),
      'RUNCONFIG': (
          'CREATE TABLE "RUNCONFIG" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"TYPE" INTEGER,"AUTO_PAUSE_ENABLE" INTEGER,"VOICE_PLAY_ENABLE" '
          'INTEGER,"MEASURE_HRENABLE" INTEGER,"REMIND_HRENABLE" '
          'INTEGER,"REMIND_HEART_RATE" INTEGER,"REMIND_PACE_ENABLE" '
          'INTEGER,"REMIND_PACE" INTEGER,"SYNCED" '
          'INTEGER,"LOCK_SCREEN_DISPLAY" INTEGER,"INDOOR_MODEL_ARRAY" '
          'TEXT,"STEP_LENGTH_ARRAY" TEXT,"KEEP_SCREEN_ON" INTEGER)'),
      'SENSOR_DATA': (
          'CREATE TABLE "SENSOR_DATA" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"LAB_ACTION_ID" INTEGER,"SAMPLING_RATE" '
          'INTEGER,"START_TAG_TIME" INTEGER,"END_TAG_TIME" '
          'INTEGER,"FILE_NAME" TEXT,"SENSOR_TYPE" INTEGER,"RESOLUTION" TEXT)'),
      'SHOES_DATA': (
          'CREATE TABLE "SHOES_DATA" ("TYPE" INTEGER,"SOURCE" INTEGER,"MAC" '
          'TEXT,"DEVICEID" TEXT,"SN" TEXT,"SHOESID" TEXT,"DATE" TEXT PRIMARY '
          'KEY NOT NULL ,"SUMMARY" TEXT,"DATA" BLOB,"SYNCED" INTEGER)'),
      'SHOES_PARTNERS': (
          'CREATE TABLE "SHOES_PARTNERS" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"BRAND" TEXT,"TYPE" TEXT,"SYNCTIME" TEXT,"SUMMARY" '
          'TEXT,"BIGURI" TEXT,"URI" TEXT)'),
      'TRACKDATA': (
          'CREATE TABLE "TRACKDATA" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"SOURCE" INTEGER,"TYPE" INTEGER,"TRACKID" INTEGER,"SEGMENT" '
          'INTEGER,"BULKLL" TEXT,"BULKGAIT" TEXT,"BULKAL" TEXT,"BULKACC" '
          'TEXT,"BULKTIME" TEXT,"BULKFLAG" TEXT,"BULKPACE" TEXT,"BULKPAUSE" '
          'TEXT,"KILOMARKED" TEXT,"BULKDISTANCE" '
          'TEXT,"BULKBAROMETER_ALTITUDE" TEXT,"BULKHR" TEXT,"MILEMARKED" '
          'TEXT,"SIZE" INTEGER,"V" INTEGER,"COMPRESSED" INTEGER,"PROVIDER" '
          'INTEGER,"SYNCED" INTEGER,UNIQUE (SOURCE,TYPE,SEGMENT,TRACKID) ON '
          'CONFLICT REPLACE)'),
      'TRACKDEATHBOOK': (
          'CREATE TABLE "TRACKDEATHBOOK" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"TRACKID" INTEGER,"SUMMARY" TEXT,"SSUMMARY" '
          'TEXT,"SYNCED" INTEGER,UNIQUE (TRACKID) ON CONFLICT REPLACE)'),
      'TRACKHR': (
          'CREATE TABLE "TRACKHR" ("_id" INTEGER PRIMARY KEY AUTOINCREMENT '
          ',"SOURCE" INTEGER,"TYPE" INTEGER,"TRACKID" INTEGER,"SEGMENT" '
          'INTEGER,"SIZE" INTEGER,"COMPRESSED" INTEGER,"SUMMARY" '
          'TEXT,"BULKHR" TEXT,"SYNCED" INTEGER,UNIQUE '
          '(SOURCE,TYPE,SEGMENT,TRACKID) ON CONFLICT REPLACE)'),
      'TRACKRECORD': (
          'CREATE TABLE "TRACKRECORD" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"SOURCE" INTEGER,"TYPE" INTEGER,"DATE" '
          'TEXT,"TRACKID" INTEGER,"DISTANCE" INTEGER,"COSTTIME" INTEGER,"CAL" '
          'INTEGER,"PACE" REAL,"SFREQ" INTEGER,"AVGHR" INTEGER,"FFPERCENT" '
          'INTEGER,"V" INTEGER,"ENDTIME" INTEGER,"MAXRTP" REAL,"MINRTP" '
          'REAL,"DEVICE" TEXT,"SUMMARY" TEXT,"LOCATION" TEXT,"LOCATIONDESC" '
          'TEXT,"STATE" INTEGER,"STATISTICS" TEXT,"SIZE" INTEGER,"CONTOURURI" '
          'TEXT,"STATISTICED" INTEGER,"SYNCED" INTEGER,"ALTITUDE_ASCEND" '
          'INTEGER,"ALTITUDE_DESCEND" INTEGER,"TOTAL_STEP" '
          'INTEGER,"AVG_STRIDE_LENGTH" INTEGER,"CLIMB_DISASCEND" '
          'INTEGER,"MAX_CADENCE" INTEGER,"AVG_CADENCE" INTEGER,"LANDING_TIME" '
          'INTEGER,"FLIGHT_RATIO" INTEGER,"CLIMB_DIS_DESCEND" '
          'INTEGER,"CLIMB_DIS_ASCEND_TIME" INTEGER,"CLIMB_DIS_DESCEND_TIME" '
          'INTEGER,UNIQUE (SOURCE,TYPE,TRACKID) ON CONFLICT REPLACE)'),
      'TRACKSTATISTICS': (
          'CREATE TABLE "TRACKSTATISTICS" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"SPORTTYPE" INTEGER,"TYPE" INTEGER,"SUBTYPE" '
          'TEXT,"SUMMARY" TEXT,"SYNCED" INTEGER,UNIQUE (TYPE,SUBTYPE) ON '
          'CONFLICT REPLACE)'),
      'USER_INFOS': (
          'CREATE TABLE "USER_INFOS" ("USER_ID" TEXT PRIMARY KEY NOT NULL '
          ',"NAME" TEXT,"BIRTHDAY" TEXT,"AVATAR_URL" TEXT,"AVATAR_PATH" '
          'TEXT,"GENDER" INTEGER,"HEIGHT" INTEGER,"SYNCED" INTEGER,"WEIGHT" '
          'REAL,"TARGET_WEIGHT" REAL,"CITY" TEXT,"LONGITUDE" TEXT,"LATITUDE" '
          'TEXT,"CREAT_TIME" TEXT,"LAST_LOGIN_TIME" TEXT)'),
      'WEIGHT_GOALS': (
          'CREATE TABLE "WEIGHT_GOALS" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"UID" TEXT,"FUID" INTEGER,"GOAL_TYPE" '
          'INTEGER,"CURRENT_VAL" REAL,"GOAL" REAL,"DATE_TIME" '
          'INTEGER,"HEIGHT" INTEGER,"SYNCED" INTEGER)'),
      'WEIGHT_INFOS': (
          'CREATE TABLE "WEIGHT_INFOS" ("_id" INTEGER PRIMARY KEY '
          'AUTOINCREMENT ,"WEIGHT" REAL,"TIMESTAMP" INTEGER,"TYPE" '
          'INTEGER,"SYNC" INTEGER,"SYNC_QQHEALTH" INTEGER,"TIME_ZONE" '
          'INTEGER,"FAT_PERCENTAGE" TEXT,"SOURCE" INTEGER,"IMPEDANCE" '
          'INTEGER,"BMI" REAL,"HEIGHT" INTEGER,"BODY_FAT" REAL,"MUSCLE" '
          'REAL,"BODY_SHAPE_TYPE" INTEGER,"MOISTURE" REAL,"BASAL_METABOLISM" '
          'INTEGER,"VISCERAL_FAT" REAL,"BONE_MASS" REAL,"SCORE" '
          'INTEGER,"DEVICE_ID" TEXT,"USER_ID" INTEGER)'),
      'android_metadata': (
          'CREATE TABLE android_metadata (locale TEXT)')}]

  def ParseEventRow(self, parser_mediator, query, row, **unused_kwargs):
    """Parses an Event row.
    Args:
      parser_mediator (ParserMediator): mediates interactions between parsers
          and other components, such as storage and dfvfs.
      query (str): query that created the row.
      row (sqlite3.Row): row.
    """
    query_hash = hash(query)
    event_data = MiFitEventData()
    event_data.summary = self._GetRowValue(query_hash, row, 'SUMMARY')
    event_data.data = self._GetRowValue(query_hash, row, 'DATA')
    event_data.timeZone = self._GetRowValue(query_hash, row, 'TIME_ZONE')
    event_data.deviceID = self._GetRowValue(query_hash, row, 'DEVICE_ID')
    event_data.query = query

    timestamp = self._GetRowValue(query_hash, row, 'DATE').encode('utf-8')
    date_time= dfdatetime_time_elements.TimeElements()
    date_time.CopyFromDateTimeString(timestamp)
    event = time_events.DateTimeValuesEvent(
        date_time, definitions.TIME_DESCRIPTION_LAST_VISITED)
    parser_mediator.ProduceEventWithEventData(event, event_data)

sqlite.SQLiteParser.RegisterPlugin(MiFitPlugin)
